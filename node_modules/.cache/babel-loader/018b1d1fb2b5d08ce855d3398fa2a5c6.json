{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaleel\\\\Desktop\\\\React\\\\01-starting-setup\\\\src\\\\Components\\\\NewExpense\\\\NewExpense.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./NewExpense.css\";\nimport ExpenseForm from \"./ExpenseForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NewExpense(props) {\n  _s();\n\n  const [isShownForm, setShownForm] = useState(false);\n\n  function saveExpenseDataHandler(enteredExpenseData) {\n    const expenseData = {\n      /* copy the entered data which is stores in the\r\n            function submitHandler(event) in the ExpenseForm.js \r\n            all the key values pair would be saved  */\n      ...enteredExpenseData,\n      id: Math.random().toString()\n    }; //console.log(expenseData);\n\n    props.onAddExpense(expenseData);\n  }\n\n  function startShownForm() {\n    setShownForm(true);\n  }\n\n  function notShowForm() {\n    setShownForm(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"new-expense\",\n    children: [!isShownForm && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startShownForm,\n      children: \"Add New Expense\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 24\n    }, this), isShownForm && /*#__PURE__*/_jsxDEV(ExpenseForm, {\n      onSaveExpenseData: saveExpenseDataHandler,\n      onCancelEditing: notShowForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewExpense, \"WwUCuUemjYIdhkVnmJsnxrjmywQ=\");\n\n_c = NewExpense;\nexport default NewExpense;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewExpense\");","map":{"version":3,"sources":["C:/Users/jaleel/Desktop/React/01-starting-setup/src/Components/NewExpense/NewExpense.js"],"names":["React","useState","ExpenseForm","NewExpense","props","isShownForm","setShownForm","saveExpenseDataHandler","enteredExpenseData","expenseData","id","Math","random","toString","onAddExpense","startShownForm","notShowForm"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAO,kBAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AACA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AAEzB,QAAK,CAACC,WAAD,EAAcC,YAAd,IAA4BL,QAAQ,CAAC,KAAD,CAAzC;;AAEA,WAASM,sBAAT,CAAgCC,kBAAhC,EAAoD;AAClD,UAAMC,WAAW,GAAG;AAClB;AACN;AACA;AACM,SAAGD,kBAJe;AAKlBE,MAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,GAAcC,QAAd;AALc,KAApB,CADkD,CAQlD;;AACAT,IAAAA,KAAK,CAACU,YAAN,CAAmBL,WAAnB;AACD;;AACD,WAASM,cAAT,GAAyB;AACvBT,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;;AACD,WAASU,WAAT,GAAsB;AACpBV,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,eACG,CAACD,WAAD,iBAAgB;AAAQ,MAAA,OAAO,EAAEU,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADnB,EAEGV,WAAW,iBAAI,QAAC,WAAD;AAAa,MAAA,iBAAiB,EAAEE,sBAAhC;AAAwD,MAAA,eAAe,EAAES;AAAzE;AAAA;AAAA;AAAA;AAAA,YAFlB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GA3BQb,U;;KAAAA,U;AA6BT,eAAeA,UAAf","sourcesContent":["import React,{useState} from \"react\";\r\nimport \"./NewExpense.css\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nfunction NewExpense(props) {\r\n\r\n  const[isShownForm, setShownForm]=useState(false);\r\n\r\n  function saveExpenseDataHandler(enteredExpenseData) {\r\n    const expenseData = {\r\n      /* copy the entered data which is stores in the\r\n            function submitHandler(event) in the ExpenseForm.js \r\n            all the key values pair would be saved  */\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    //console.log(expenseData);\r\n    props.onAddExpense(expenseData);\r\n  }\r\n  function startShownForm(){\r\n    setShownForm(true);\r\n  }\r\n  function notShowForm(){\r\n    setShownForm(false);\r\n  }\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!isShownForm && <button onClick={startShownForm}>Add New Expense</button>}\r\n      {isShownForm && <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} onCancelEditing={notShowForm}></ExpenseForm>\r\n}</div>\r\n  );\r\n}\r\n\r\nexport default NewExpense;\r\n"]},"metadata":{},"sourceType":"module"}