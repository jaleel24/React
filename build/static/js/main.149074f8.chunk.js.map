{"version":3,"sources":["Components/UI/Card.js","Components/Expenses/ExpensesFilter.js","Components/Expenses/ExpenseDate.js","Components/Expenses/ExpenseItem.js","Components/Expenses/ExpensesList.js","Components/Chart/ChartBar.js","Components/Chart/Chart.js","Components/Expenses/Expenseschart.js","Components/Expenses/Expenses.js","Components/NewExpense/ExpenseForm.js","Components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","selected","onChange","event","onChangeFilter","target","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","useState","title","setTitle","amount","onClick","console","log","ExpensesList","items","length","map","expense","id","ChartBar","barfillHeight","maxValue","Math","round","style","height","label","Chart","dataPointvalues","dataPoints","dataPoint","totalMax","max","random","ExpensesChart","chartDataPoints","e","getMonth","Expenses","filteredYear","setFileredYEar","filteredExpense","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onCancelEditing","NewExpense","isShownForm","setShownForm","enteredExpenseData","onAddExpense","DUMMY_EXPENSES","App","expenses","setExpenses","previousExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.149074f8.chunk.js","sourcesContent":["import './Card.css';\r\nfunction Card(props){\r\n    /* //props.children is a builten prop which will help make us a wrapper like card and anything inside that will\r\n    // will have the same style as coded in Card.css ,\r\n     helps us in composition\r\n */\r\n    const classes = 'card ' + props.className;\r\n    return <div className={classes}>\r\n        {props.children}\r\n    </div>\r\n}\r\nexport default Card;","import React from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n    function dropDownFilter(event){\r\n\r\n        props.onChangeFilter(event.target.value);\r\n       \r\n\r\n    }\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropDownFilter}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import './ExpenseDate.css';\r\n\r\nfunction ExpenseDate(props) {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n}\r\nexport default ExpenseDate;\r\n","// all components in the react js are basically a function\r\nimport React, {useState} from 'react'; \r\n/* always call use state in a main function not in a nested function\r\n */\r\nimport \"./ExpenseItem.css\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\nfunction ExpenseItem(props) {\r\n  // const expenseDate = new Date(2021,11,1);\r\n  // const expense_Title = 'Car Insurance ';\r\n  // const expenseAmount = 300;\r\n  \r\n  /*************************************************************** */ \r\n  /*   useState is a hook and important hook that we use in React\r\n        https://reactjs.org/docs/hooks-state.html\r\n        \r\n        What does useState return? \r\n        It returns a pair of values: the current state and a\r\n        function that updates it. This is why we write\r\n        const [count, setCount] = useState().\r\n        This is similar to this.state.count and this.setState in a\r\n        class, except you get them in a pair*/ \r\n   /*************************************************************** */ \r\n        const [title, setTitle]= useState(props.title);\r\n  const clickHandler = () => {\r\n    setTitle('updated!');\r\n    console.log(title); \r\n  }\r\n  return (\r\n    //--------Without props------------------\r\n    // <div className=\"expense-item\">\r\n    //     <div>{expenseDate.toISOString()}</div>\r\n    //         <div className=\"expense-item__description\">\r\n    //             {/* <h2> Car Insurance</h2> */}\r\n    //             <h2>{expense_Title}</h2>\r\n    //             <div className=\"expense-item__price\">${expenseAmount}</div>\r\n    //         </div>\r\n    // </div>\r\n    //-------------------- with props--------------------------------//\r\n    <Card className=\"expense-item\">\r\n      {/*  Here we are going to use the Card.js and replace the div by card tag because we are using a \r\n            concept of compositon */}\r\n\r\n        <ExpenseDate date={props.date}></ExpenseDate>\r\n        <div className=\"expense-item__description\">\r\n            <h2>{title}</h2>\r\n            <div className=\"expense-item__price\">${props.amount}</div>\r\n        </div>\r\n        <button onClick={clickHandler}>Change Title</button>\r\n    </Card>\r\n  );\r\n}\r\nexport default ExpenseItem;\r\n","import React from \"react\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport \"./ExpensesList.css\";\r\nfunction ExpensesList(props) {\r\n  if (props.items.length === 0) {\r\n    return <h2 className=\"exenses-list__fallback\">Found No Expenses.</h2>;\r\n  }\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.items.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\nexport default ExpensesList;\r\n","import React from \"react\";\r\nimport './chartBar.css';\r\nfunction ChartBar(props){\r\n    let barfillHeight= '0%';\r\n\r\n    if( props.maxValue > 0){\r\n        barfillHeight = Math.round((props.value / props.maxValue * 100)) + '%';\r\n    }\r\n    return(\r\n        <div className=\"chart-bar\">\r\n            <div className=\"chart-bar__inner\">\r\n                <div className=\"chart-bar__fill\" style={{ height : barfillHeight}}></div>               \r\n            </div>\r\n            <div className=\"chart-bar__label\">{props.label}</div>\r\n        </div>\r\n    );\r\n}\r\nexport default ChartBar;","import React from \"react\";\r\nimport ChartBar from \"./ChartBar\";\r\nimport \"./Chart.css\";\r\nfunction Chart(props) {\r\n    const dataPointvalues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n    const totalMax = Math.max(...dataPointvalues);\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={Math.random()}\r\n          value={dataPoint.value}\r\n          maxValue={totalMax}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\nexport default Chart;\r\n","import React from \"react\";\r\nimport Chart from \"../Chart/Chart\";\r\n\r\nfunction ExpensesChart(props){\r\n    const chartDataPoints =[\r\n        {label:'jan' ,value:0},\r\n        {label:'feb' ,value:0},\r\n        {label:'March' ,value:0},\r\n        {label:'april' ,value:0},\r\n        {label:'may' ,value:0},\r\n        {label:'june' ,value:0},\r\n        {label:'july' ,value:0},\r\n        {label:'aug' ,value:0},\r\n        {label:'sep' ,value:0},\r\n        {label:'oct' ,value:0},\r\n        {label:'nov' ,value:0},\r\n        {label:'dec' ,value:0},\r\n    ];\r\n\r\n    for( const e of props.expense){\r\n        const expenseMonth = e.date.getMonth(); //starting at  0 => january =>\r\n        chartDataPoints[expenseMonth].value += e.amount;\r\n    }\r\n\r\n    return <div>\r\n        <Chart dataPoints ={chartDataPoints} />\r\n    </div>\r\n\r\n}\r\nexport default ExpensesChart;","import React, { useState } from \"react\";\r\n//import ExpenseForm from \"../NewExpense/ExpenseForm\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./ExpenseDate.css\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport ExpensesChart from \"./Expenseschart\";\r\nfunction Expenses(props) {\r\n  const [filteredYear, setFileredYEar] = useState(\"2020\");\r\n  /* selectedYear is the value = event.target.value in the ExpensesFilter.js */\r\n  function onChangeFilterHandler(selectedYear) {\r\n    /* now as we are changing the state so we need to import\r\n       the state from react and  we dont need to log the value as we were\r\n       console.log('Expenses.js')\r\n       console.log(selectedYear); */\r\n    setFileredYEar(selectedYear);\r\n  };\r\n  /* boolean function called (expense =>...) */\r\n  const filteredExpense= props.items.filter(expense =>{\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n    \r\n  return (\r\n    <li>\r\n      <Card className=\"expenses\">\r\n        <h2>Filter by year</h2>\r\n        <ExpensesFilter\r\n          selected={filteredYear}\r\n          onChangeFilter={onChangeFilterHandler}\r\n        />\r\n        <ExpensesChart expense={filteredExpense}/>\r\n        <ExpensesList items={filteredExpense}/>\r\n        </Card>\r\n    </li>\r\n  );\r\n      //    {/* {props.items.map((expense) */}\r\n      //    {/*\r\n      //    1- now in order to use conditional ternary statment to list the expense according to\r\n      //       the choice \r\n      //    2- We can use the && operator as well instead of the  long ternary operator\r\n      //       as used in the code \r\n      //       {filteredExpense.length === 0 && <p>No Expenses found.</p> } and similar for the other part\r\n      //       in React.js && operator is a trick which basicaly reutrn the value if the conditional\r\n      //       part is correct\r\n      //     3- or else we can simply store the <p> value in the variable and then use if and else statments*/\r\n  \r\n         \r\n      //   {/* {filteredExpense.length === 0 ?:filteredExpense.map((expense) => (\r\n      //     <ExpenseItem\r\n      //       key={expense.id}\r\n      //       title={expense.title}\r\n      //       amount={expense.amount}\r\n      //       date={expense.date}\r\n      //     />\r\n      //   ))} */}\r\n       \r\n      //   /* <ExpenseItem\r\n      //   title={props.items[0].title}\r\n      //   amount={props.items[0].amount}\r\n      //   date={props.items[0].date}\r\n      // ></ExpenseItem>\r\n      // <ExpenseItem\r\n      //   title={props.items[1].title}\r\n      //   amount={props.items[1].amount}\r\n      //   date={props.items[1].date}\r\n      // ></ExpenseItem>\r\n      // <ExpenseItem\r\n      //   title={props.items[2].title}\r\n      //   amount={props.items[2].amount}\r\n      //   date={props.items[2].date}\r\n      // ></ExpenseItem>\r\n      // <ExpenseItem\r\n      //   title={props.items[3].title}\r\n      //   amount={props.items[3].amount}\r\n      //   date={props.items[3].date}\r\n      // ></ExpenseItem> */}\r\n   \r\n}\r\nexport default Expenses;\r\n","import React,{useState} from \"react\";\r\nimport \"./ExpenseForm.css\";\r\nfunction ExpenseForm(props) {\r\n    /* Always use the UseState hook inside the  main function not in\r\n        the nested function */\r\n    const [enteredTitle, setEnteredTitle] = useState('');\r\n    const [enteredAmount, setEnteredAmount] = useState('');\r\n    const [enteredDate, setEnteredDate] = useState('')\r\n    function titleChangeHandler(event){\r\n        /* \r\n        1-event is the object which is automatically given by\r\n          js when change happends and listening happens event is an object which has the \r\n          value which is listened when user type anythin\r\n        2- Now we need something to store this listened value so that\r\n            we can use it later on when we submit the form\r\n        3-   So simply we use state and for that we destructure the import*/\r\n       \r\n       // console.log(event.target.value);\r\n       setEnteredTitle(event.target.value);\r\n       \r\n    }\r\n    /* another way of defining a function */\r\n    const amountChangeHandler =event =>{\r\n\r\n        setEnteredAmount(event.target.value);\r\n    };\r\n\r\n    function dateChangeHandler(event){\r\n        setEnteredDate(event.target.value);\r\n    }\r\n\r\n    function submitHandler(event){\r\n        /*  we are preventing the object to use the default behaviour because in \r\n            browsers onsubmit has the default behaviour to reload the page and we dont want that\r\n             */\r\n            event.preventDefault();\r\n        const expenseData ={\r\n            title :enteredTitle,\r\n            amount : +enteredAmount,\r\n            date : new Date(enteredDate)\r\n        }\r\n            \r\n       // console.log(expenseData);\r\n       /* here we are  */\r\n       props.onSaveExpenseData(expenseData);\r\n        setEnteredTitle('');\r\n        setEnteredAmount('');\r\n        setEnteredDate('');\r\n        \r\n    }\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__control\">\r\n        <div className=\"new-expense__control\">\r\n            <label>Title</label>\r\n            {/* we are using two way binding here */}\r\n            <input type=\"text\" value={enteredTitle} onChange={titleChangeHandler}/>\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n            <label>Amount</label>\r\n            <input type=\"number\" value={enteredAmount} min=\"0.01\" step='0.01'  onChange={amountChangeHandler}/>\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n            <label>Date</label>\r\n            <input type=\"date\"  value={enteredDate} min=\"2019-01-01\" max='20211-12-31' onChange={dateChangeHandler}/>\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type='button' onClick={props.onCancelEditing}>Cancel</button>\r\n        <button type='submit'>Add Expense</button>\r\n        \r\n      </div>\r\n    </form>\r\n  );\r\n}\r\nexport default ExpenseForm;\r\n","import React,{useState} from \"react\";\r\nimport \"./NewExpense.css\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nfunction NewExpense(props) {\r\n\r\n  const[isShownForm, setShownForm]=useState(false);\r\n\r\n  function saveExpenseDataHandler(enteredExpenseData) {\r\n    const expenseData = {\r\n      /* copy the entered data which is stores in the\r\n            function submitHandler(event) in the ExpenseForm.js \r\n            all the key values pair would be saved  */\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n     \r\n    };\r\n    //console.log(expenseData);\r\n    props.onAddExpense(expenseData);\r\n    setShownForm(false);\r\n  }\r\n  function startShownForm(){\r\n    setShownForm(true);\r\n  }\r\n  function notShowForm(){\r\n    setShownForm(false);\r\n  }\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!isShownForm && <button onClick={startShownForm}>Add New Expense</button>}\r\n      {isShownForm && <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} onCancelEditing={notShowForm}></ExpenseForm>\r\n}</div>\r\n  );\r\n}\r\n\r\nexport default NewExpense;\r\n","import React,{useState} from \"react\";\nimport Expenses from \"./Components/Expenses/Expenses\";\nimport NewExpense from \"./Components/NewExpense/NewExpense\";\n //creating the lower array just to use this as a prop in expensItems.js\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\nfunction App() {\n \n  \n    const [expenses, setExpenses]= useState(DUMMY_EXPENSES);\n    function addExpenseHandler(expense){\n        // console.log('in app.js');\n        // console.log(expense);\n         /* either this or \n          setExpenses(\n            function preExpenses(previousExpenses){\n              return [expense,....previousExpenses];\n            }\n          );\n         */\n           /* to change the state u better use the special function\n              which u are passing as a fucntion in setexpenses as\n               argument which will have the previous expenses */\n         setExpenses((previousExpenses =>{\n           /* adding new expense as the first item in array and copying all the other \n              or previous expense from the dummyExpenses */\n           return [expense, ...previousExpenses];\n         }))\n       // setExpenses([expense, ...expenses]);\n    }\n  return (\n    //removed the expenses details from here and created a new component Expenses\n    // <div>\n    //   <h2>Let's get started!</h2>\n    //     <ExpenseItem\n    //       title={expenses[0].title}\n    //       amount={expenses[0].amount}\n    //       date={expenses[0].date}\n    //     ></ExpenseItem>\n    //     <ExpenseItem\n    //       title={expenses[1].title}\n    //       amount={expenses[1].amount}\n    //       date={expenses[1].date}\n    //     ></ExpenseItem>\n    //     <ExpenseItem\n    //       title={expenses[2].title}\n    //       amount={expenses[2].amount}\n    //       date={expenses[2].date}\n    //     ></ExpenseItem>\n    //     <ExpenseItem\n    //       title={expenses[3].title}\n    //       amount={expenses[3].amount}\n    //       date={expenses[3].date}\n    //     ></ExpenseItem>\n\n    // </div>\n\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler}/>\n      <Expenses items= {expenses} ></Expenses>\n      \n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}